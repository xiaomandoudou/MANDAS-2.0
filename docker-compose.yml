version: '3.8'

services:
  # 数据库服务
  postgres:
    image: postgres:15
    container_name: mandas-postgres
    environment:
      POSTGRES_DB: mandas
      POSTGRES_USER: mandas
      POSTGRES_PASSWORD: mandas123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mandas"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis 消息队列
  redis:
    image: redis:7-alpine
    container_name: mandas-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ChromaDB 向量数据库
  chromadb:
    image: chromadb/chroma:latest
    container_name: mandas-chromadb
    ports:
      - "8000:8000"
    volumes:
      - chroma_data:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Ollama LLM 服务
  ollama:
    image: ollama/ollama:latest
    container_name: mandas-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/version"]
      interval: 30s
      timeout: 10s
      retries: 5

  # API Gateway (脊椎 - 调度中心)
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: mandas-api-gateway
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://mandas:mandas123@postgres:5432/mandas
      - REDIS_URL=redis://redis:6379
      - CHROMADB_URL=http://chromadb:8000
      - OLLAMA_URL=http://ollama:11434
      - JWT_SECRET=your-secret-key-change-in-production
      - LOG_LEVEL=INFO
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      chromadb:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Agent Worker (神经系统)
  agent-worker:
    build:
      context: ./services/agent-worker
      dockerfile: Dockerfile
    container_name: mandas-agent-worker
    environment:
      - DATABASE_URL=postgresql://mandas:mandas123@postgres:5432/mandas
      - REDIS_URL=redis://redis:6379
      - CHROMADB_URL=http://chromadb:8000
      - OLLAMA_URL=http://ollama:11434
      - LOG_LEVEL=INFO
      - TOOLS_DIRECTORY=/app/tools.d
      - MAX_AGENT_ROUNDS=20
      - SHORT_TERM_MEMORY_TTL=3600
      - MAX_CONTAINER_MEMORY=1g
      - CONTAINER_TIMEOUT=600
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      chromadb:
        condition: service_healthy
      ollama:
        condition: service_healthy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./services/agent-worker/tools.d:/app/tools.d:ro
      - ./services/agent-worker/configs:/app/configs:ro
      - ./logs:/app/logs
    privileged: true

  # Frontend UI (面孔)
  frontend:
    build:
      context: ./services/frontend
      dockerfile: Dockerfile
    container_name: mandas-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080
      - REACT_APP_WS_URL=ws://localhost:8080
    depends_on:
      - api-gateway
    volumes:
      - ./services/frontend/src:/app/src
      - ./services/frontend/public:/app/public

volumes:
  postgres_data:
  redis_data:
  chroma_data:
  ollama_data:

networks:
  default:
    name: mandas-network
